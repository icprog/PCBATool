/* soapClient.cpp
   Generated by gSOAP 2.8.31 for WebService.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.31 2016-05-07 11:08:37 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SnSaveTechProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SnSaveTechProcess *ns1__SnSaveTechProcess, _ns1__SnSaveTechProcessResponse &ns1__SnSaveTechProcessResponse)
{	struct __ns1__SnSaveTechProcess soap_tmp___ns1__SnSaveTechProcess;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SnSaveTechProcess.ns1__SnSaveTechProcess = ns1__SnSaveTechProcess;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SnSaveTechProcess(soap, &soap_tmp___ns1__SnSaveTechProcess);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SnSaveTechProcess(soap, &soap_tmp___ns1__SnSaveTechProcess, "-ns1:SnSaveTechProcess", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SnSaveTechProcess(soap, &soap_tmp___ns1__SnSaveTechProcess, "-ns1:SnSaveTechProcess", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SnSaveTechProcessResponse)
		return soap_closesock(soap);
	ns1__SnSaveTechProcessResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SnSaveTechProcessResponse.soap_get(soap, "ns1:SnSaveTechProcessResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__bindAssembly(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__bindAssembly *ns1__bindAssembly, _ns1__bindAssemblyResponse &ns1__bindAssemblyResponse)
{	struct __ns1__bindAssembly soap_tmp___ns1__bindAssembly;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__bindAssembly.ns1__bindAssembly = ns1__bindAssembly;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__bindAssembly(soap, &soap_tmp___ns1__bindAssembly);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__bindAssembly(soap, &soap_tmp___ns1__bindAssembly, "-ns1:bindAssembly", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__bindAssembly(soap, &soap_tmp___ns1__bindAssembly, "-ns1:bindAssembly", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__bindAssemblyResponse)
		return soap_closesock(soap);
	ns1__bindAssemblyResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__bindAssemblyResponse.soap_get(soap, "ns1:bindAssemblyResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__loadTimeControlData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__loadTimeControlData *ns1__loadTimeControlData, _ns1__loadTimeControlDataResponse &ns1__loadTimeControlDataResponse)
{	struct __ns1__loadTimeControlData soap_tmp___ns1__loadTimeControlData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__loadTimeControlData.ns1__loadTimeControlData = ns1__loadTimeControlData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__loadTimeControlData(soap, &soap_tmp___ns1__loadTimeControlData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loadTimeControlData(soap, &soap_tmp___ns1__loadTimeControlData, "-ns1:loadTimeControlData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loadTimeControlData(soap, &soap_tmp___ns1__loadTimeControlData, "-ns1:loadTimeControlData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loadTimeControlDataResponse)
		return soap_closesock(soap);
	ns1__loadTimeControlDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loadTimeControlDataResponse.soap_get(soap, "ns1:loadTimeControlDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__loadNgPanelNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__loadNgPanelNo *ns1__loadNgPanelNo, _ns1__loadNgPanelNoResponse &ns1__loadNgPanelNoResponse)
{	struct __ns1__loadNgPanelNo soap_tmp___ns1__loadNgPanelNo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__loadNgPanelNo.ns1__loadNgPanelNo = ns1__loadNgPanelNo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__loadNgPanelNo(soap, &soap_tmp___ns1__loadNgPanelNo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__loadNgPanelNo(soap, &soap_tmp___ns1__loadNgPanelNo, "-ns1:loadNgPanelNo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__loadNgPanelNo(soap, &soap_tmp___ns1__loadNgPanelNo, "-ns1:loadNgPanelNo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__loadNgPanelNoResponse)
		return soap_closesock(soap);
	ns1__loadNgPanelNoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__loadNgPanelNoResponse.soap_get(soap, "ns1:loadNgPanelNoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkSNOrderNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__checkSNOrderNo *ns1__checkSNOrderNo, _ns1__checkSNOrderNoResponse &ns1__checkSNOrderNoResponse)
{	struct __ns1__checkSNOrderNo soap_tmp___ns1__checkSNOrderNo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__checkSNOrderNo.ns1__checkSNOrderNo = ns1__checkSNOrderNo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__checkSNOrderNo(soap, &soap_tmp___ns1__checkSNOrderNo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkSNOrderNo(soap, &soap_tmp___ns1__checkSNOrderNo, "-ns1:checkSNOrderNo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkSNOrderNo(soap, &soap_tmp___ns1__checkSNOrderNo, "-ns1:checkSNOrderNo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__checkSNOrderNoResponse)
		return soap_closesock(soap);
	ns1__checkSNOrderNoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__checkSNOrderNoResponse.soap_get(soap, "ns1:checkSNOrderNoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkSNPangusOrderNo(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__checkSNPangusOrderNo *ns1__checkSNPangusOrderNo, _ns1__checkSNPangusOrderNoResponse &ns1__checkSNPangusOrderNoResponse)
{	struct __ns1__checkSNPangusOrderNo soap_tmp___ns1__checkSNPangusOrderNo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__checkSNPangusOrderNo.ns1__checkSNPangusOrderNo = ns1__checkSNPangusOrderNo;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__checkSNPangusOrderNo(soap, &soap_tmp___ns1__checkSNPangusOrderNo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkSNPangusOrderNo(soap, &soap_tmp___ns1__checkSNPangusOrderNo, "-ns1:checkSNPangusOrderNo", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkSNPangusOrderNo(soap, &soap_tmp___ns1__checkSNPangusOrderNo, "-ns1:checkSNPangusOrderNo", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__checkSNPangusOrderNoResponse)
		return soap_closesock(soap);
	ns1__checkSNPangusOrderNoResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__checkSNPangusOrderNoResponse.soap_get(soap, "ns1:checkSNPangusOrderNoResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__SnSaveTechProcess_USCOREA(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__SnSaveTechProcess_USCOREA *ns1__SnSaveTechProcess_USCOREA, _ns1__SnSaveTechProcess_USCOREAResponse &ns1__SnSaveTechProcess_USCOREAResponse)
{	struct __ns1__SnSaveTechProcess_USCOREA soap_tmp___ns1__SnSaveTechProcess_USCOREA;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__SnSaveTechProcess_USCOREA.ns1__SnSaveTechProcess_USCOREA = ns1__SnSaveTechProcess_USCOREA;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__SnSaveTechProcess_USCOREA(soap, &soap_tmp___ns1__SnSaveTechProcess_USCOREA);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__SnSaveTechProcess_USCOREA(soap, &soap_tmp___ns1__SnSaveTechProcess_USCOREA, "-ns1:SnSaveTechProcess_A", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__SnSaveTechProcess_USCOREA(soap, &soap_tmp___ns1__SnSaveTechProcess_USCOREA, "-ns1:SnSaveTechProcess_A", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__SnSaveTechProcess_USCOREAResponse)
		return soap_closesock(soap);
	ns1__SnSaveTechProcess_USCOREAResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__SnSaveTechProcess_USCOREAResponse.soap_get(soap, "ns1:SnSaveTechProcess_AResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__staffCheck(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__staffCheck *ns1__staffCheck, _ns1__staffCheckResponse &ns1__staffCheckResponse)
{	struct __ns1__staffCheck soap_tmp___ns1__staffCheck;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__staffCheck.ns1__staffCheck = ns1__staffCheck;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__staffCheck(soap, &soap_tmp___ns1__staffCheck);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__staffCheck(soap, &soap_tmp___ns1__staffCheck, "-ns1:staffCheck", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__staffCheck(soap, &soap_tmp___ns1__staffCheck, "-ns1:staffCheck", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__staffCheckResponse)
		return soap_closesock(soap);
	ns1__staffCheckResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__staffCheckResponse.soap_get(soap, "ns1:staffCheckResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAssemblyData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getAssemblyData *ns1__getAssemblyData, _ns1__getAssemblyDataResponse &ns1__getAssemblyDataResponse)
{	struct __ns1__getAssemblyData soap_tmp___ns1__getAssemblyData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getAssemblyData.ns1__getAssemblyData = ns1__getAssemblyData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getAssemblyData(soap, &soap_tmp___ns1__getAssemblyData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAssemblyData(soap, &soap_tmp___ns1__getAssemblyData, "-ns1:getAssemblyData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAssemblyData(soap, &soap_tmp___ns1__getAssemblyData, "-ns1:getAssemblyData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__getAssemblyDataResponse)
		return soap_closesock(soap);
	ns1__getAssemblyDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getAssemblyDataResponse.soap_get(soap, "ns1:getAssemblyDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InsertPRateData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InsertPRateData *ns1__InsertPRateData, _ns1__InsertPRateDataResponse &ns1__InsertPRateDataResponse)
{	struct __ns1__InsertPRateData soap_tmp___ns1__InsertPRateData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InsertPRateData.ns1__InsertPRateData = ns1__InsertPRateData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__InsertPRateData(soap, &soap_tmp___ns1__InsertPRateData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InsertPRateData(soap, &soap_tmp___ns1__InsertPRateData, "-ns1:InsertPRateData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InsertPRateData(soap, &soap_tmp___ns1__InsertPRateData, "-ns1:InsertPRateData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__InsertPRateDataResponse)
		return soap_closesock(soap);
	ns1__InsertPRateDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InsertPRateDataResponse.soap_get(soap, "ns1:InsertPRateDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__blakeTestExchangeData1(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__blakeTestExchangeData1 *ns1__blakeTestExchangeData1, _ns1__blakeTestExchangeData1Response &ns1__blakeTestExchangeData1Response)
{	struct __ns1__blakeTestExchangeData1 soap_tmp___ns1__blakeTestExchangeData1;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__blakeTestExchangeData1.ns1__blakeTestExchangeData1 = ns1__blakeTestExchangeData1;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__blakeTestExchangeData1(soap, &soap_tmp___ns1__blakeTestExchangeData1);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__blakeTestExchangeData1(soap, &soap_tmp___ns1__blakeTestExchangeData1, "-ns1:blakeTestExchangeData1", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__blakeTestExchangeData1(soap, &soap_tmp___ns1__blakeTestExchangeData1, "-ns1:blakeTestExchangeData1", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__blakeTestExchangeData1Response)
		return soap_closesock(soap);
	ns1__blakeTestExchangeData1Response.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__blakeTestExchangeData1Response.soap_get(soap, "ns1:blakeTestExchangeData1Response", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__InsertTimeControl(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__InsertTimeControl *ns1__InsertTimeControl, _ns1__InsertTimeControlResponse &ns1__InsertTimeControlResponse)
{	struct __ns1__InsertTimeControl soap_tmp___ns1__InsertTimeControl;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__InsertTimeControl.ns1__InsertTimeControl = ns1__InsertTimeControl;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__InsertTimeControl(soap, &soap_tmp___ns1__InsertTimeControl);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__InsertTimeControl(soap, &soap_tmp___ns1__InsertTimeControl, "-ns1:InsertTimeControl", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__InsertTimeControl(soap, &soap_tmp___ns1__InsertTimeControl, "-ns1:InsertTimeControl", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__InsertTimeControlResponse)
		return soap_closesock(soap);
	ns1__InsertTimeControlResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__InsertTimeControlResponse.soap_get(soap, "ns1:InsertTimeControlResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkMac(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__checkMac *ns1__checkMac, _ns1__checkMacResponse &ns1__checkMacResponse)
{	struct __ns1__checkMac soap_tmp___ns1__checkMac;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__checkMac.ns1__checkMac = ns1__checkMac;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__checkMac(soap, &soap_tmp___ns1__checkMac);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkMac(soap, &soap_tmp___ns1__checkMac, "-ns1:checkMac", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkMac(soap, &soap_tmp___ns1__checkMac, "-ns1:checkMac", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__checkMacResponse)
		return soap_closesock(soap);
	ns1__checkMacResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__checkMacResponse.soap_get(soap, "ns1:checkMacResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMaintanceParm(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getMaintanceParm *ns1__getMaintanceParm, _ns1__getMaintanceParmResponse &ns1__getMaintanceParmResponse)
{	struct __ns1__getMaintanceParm soap_tmp___ns1__getMaintanceParm;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__getMaintanceParm.ns1__getMaintanceParm = ns1__getMaintanceParm;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__getMaintanceParm(soap, &soap_tmp___ns1__getMaintanceParm);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMaintanceParm(soap, &soap_tmp___ns1__getMaintanceParm, "-ns1:getMaintanceParm", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMaintanceParm(soap, &soap_tmp___ns1__getMaintanceParm, "-ns1:getMaintanceParm", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__getMaintanceParmResponse)
		return soap_closesock(soap);
	ns1__getMaintanceParmResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMaintanceParmResponse.soap_get(soap, "ns1:getMaintanceParmResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__fetchSnCurrentLocation(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__fetchSnCurrentLocation *ns1__fetchSnCurrentLocation, _ns1__fetchSnCurrentLocationResponse &ns1__fetchSnCurrentLocationResponse)
{	struct __ns1__fetchSnCurrentLocation soap_tmp___ns1__fetchSnCurrentLocation;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__fetchSnCurrentLocation.ns1__fetchSnCurrentLocation = ns1__fetchSnCurrentLocation;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__fetchSnCurrentLocation(soap, &soap_tmp___ns1__fetchSnCurrentLocation);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__fetchSnCurrentLocation(soap, &soap_tmp___ns1__fetchSnCurrentLocation, "-ns1:fetchSnCurrentLocation", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__fetchSnCurrentLocation(soap, &soap_tmp___ns1__fetchSnCurrentLocation, "-ns1:fetchSnCurrentLocation", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__fetchSnCurrentLocationResponse)
		return soap_closesock(soap);
	ns1__fetchSnCurrentLocationResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__fetchSnCurrentLocationResponse.soap_get(soap, "ns1:fetchSnCurrentLocationResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__goNewRouteseq(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__goNewRouteseq *ns1__goNewRouteseq, _ns1__goNewRouteseqResponse &ns1__goNewRouteseqResponse)
{	struct __ns1__goNewRouteseq soap_tmp___ns1__goNewRouteseq;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__goNewRouteseq.ns1__goNewRouteseq = ns1__goNewRouteseq;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__goNewRouteseq(soap, &soap_tmp___ns1__goNewRouteseq);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__goNewRouteseq(soap, &soap_tmp___ns1__goNewRouteseq, "-ns1:goNewRouteseq", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__goNewRouteseq(soap, &soap_tmp___ns1__goNewRouteseq, "-ns1:goNewRouteseq", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__goNewRouteseqResponse)
		return soap_closesock(soap);
	ns1__goNewRouteseqResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__goNewRouteseqResponse.soap_get(soap, "ns1:goNewRouteseqResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__blakeTestExchangeData(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__blakeTestExchangeData *ns1__blakeTestExchangeData, _ns1__blakeTestExchangeDataResponse &ns1__blakeTestExchangeDataResponse)
{	struct __ns1__blakeTestExchangeData soap_tmp___ns1__blakeTestExchangeData;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__blakeTestExchangeData.ns1__blakeTestExchangeData = ns1__blakeTestExchangeData;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__blakeTestExchangeData(soap, &soap_tmp___ns1__blakeTestExchangeData);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__blakeTestExchangeData(soap, &soap_tmp___ns1__blakeTestExchangeData, "-ns1:blakeTestExchangeData", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__blakeTestExchangeData(soap, &soap_tmp___ns1__blakeTestExchangeData, "-ns1:blakeTestExchangeData", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__blakeTestExchangeDataResponse)
		return soap_closesock(soap);
	ns1__blakeTestExchangeDataResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__blakeTestExchangeDataResponse.soap_get(soap, "ns1:blakeTestExchangeDataResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkingSNNextRoute(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__checkingSNNextRoute *ns1__checkingSNNextRoute, _ns1__checkingSNNextRouteResponse &ns1__checkingSNNextRouteResponse)
{	struct __ns1__checkingSNNextRoute soap_tmp___ns1__checkingSNNextRoute;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__checkingSNNextRoute.ns1__checkingSNNextRoute = ns1__checkingSNNextRoute;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__checkingSNNextRoute(soap, &soap_tmp___ns1__checkingSNNextRoute);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkingSNNextRoute(soap, &soap_tmp___ns1__checkingSNNextRoute, "-ns1:checkingSNNextRoute", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkingSNNextRoute(soap, &soap_tmp___ns1__checkingSNNextRoute, "-ns1:checkingSNNextRoute", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__checkingSNNextRouteResponse)
		return soap_closesock(soap);
	ns1__checkingSNNextRouteResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__checkingSNNextRouteResponse.soap_get(soap, "ns1:checkingSNNextRouteResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Ispasspostburnin(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__Ispasspostburnin *ns1__Ispasspostburnin, _ns1__IspasspostburninResponse &ns1__IspasspostburninResponse)
{	struct __ns1__Ispasspostburnin soap_tmp___ns1__Ispasspostburnin;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__Ispasspostburnin.ns1__Ispasspostburnin = ns1__Ispasspostburnin;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__Ispasspostburnin(soap, &soap_tmp___ns1__Ispasspostburnin);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__Ispasspostburnin(soap, &soap_tmp___ns1__Ispasspostburnin, "-ns1:Ispasspostburnin", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__Ispasspostburnin(soap, &soap_tmp___ns1__Ispasspostburnin, "-ns1:Ispasspostburnin", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__IspasspostburninResponse)
		return soap_closesock(soap);
	ns1__IspasspostburninResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__IspasspostburninResponse.soap_get(soap, "ns1:IspasspostburninResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__CheckTimeGap(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__CheckTimeGap *ns1__CheckTimeGap, _ns1__CheckTimeGapResponse &ns1__CheckTimeGapResponse)
{	struct __ns1__CheckTimeGap soap_tmp___ns1__CheckTimeGap;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://10.9.38.109:8080/emsmes/services/blaketestws";
	if (soap_action == NULL)
		soap_action = "";
	soap_tmp___ns1__CheckTimeGap.ns1__CheckTimeGap = ns1__CheckTimeGap;
	soap_begin(soap);
	soap->encodingStyle = NULL;
	soap_serializeheader(soap);
	soap_serialize___ns1__CheckTimeGap(soap, &soap_tmp___ns1__CheckTimeGap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__CheckTimeGap(soap, &soap_tmp___ns1__CheckTimeGap, "-ns1:CheckTimeGap", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__CheckTimeGap(soap, &soap_tmp___ns1__CheckTimeGap, "-ns1:CheckTimeGap", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns1__CheckTimeGapResponse)
		return soap_closesock(soap);
	ns1__CheckTimeGapResponse.soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__CheckTimeGapResponse.soap_get(soap, "ns1:CheckTimeGapResponse", NULL);
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
